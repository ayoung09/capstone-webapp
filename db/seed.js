const db = require('APP/db');
const Promise = require('bluebird');

const seedUsers = () => db.Promise.map([
  {name: 'Picasso', email: 'artist@art.com'},
  {name: 'Mona Lisa', email: 'smile@art.com'}
], user => db.model('users').create(user));

const seedPhrases = () => db.Promise.map([
  {text: 'lazy turtle on a rock'},
  {text: 'monkey hurls strawberry ice cream'},
  {text: 'penguin waiter serves water'},
  {text: 'take a cold shower'},
  {text: 'write a bucket list'},
  {text: 'Cookie Monster is hangry'},
  {text: 'a hipster combs his moustache'},
  {text: 'plane flies under reading rainbow'},
  {text: 'cry me a river of pepsi'},
  {text: 'ninja slips on banana peel'},
  {text: 'sad blue donkey'},
  {text: 'wizard uses magic math'},
  {text: 'birds on roller coaster'},
  {text: 'cavern of doom'},
  {text: 'genie in a bottle'},
  {text: 'Big Bird waves hello'},
  {text: 'really sweaty dancing'},
  {text: 'Superman flies over city'},
  {text: 'Kool-Aid man breaks the wall'},
  {text: 'bathroom break'},
  {text: 'potty training'},
  {text: 'old wise man in the woods'},
  {text: 'orange monster wears a mop'},
  {text: 'surfing in a chocolate ocean'},
  {text: 'hippo goes shopping'},
  {text: 'businessman eats sandwich'},
  {text: 'Peter Piper picked a peck of pickled peppers'},
  {text: 'Jack and the beanstalk'},
  {text: 'purple conch shell'},
  {text: 'happy little starfish'},
  {text: 'robot cannot compute'},
  {text: 'school of rainbow fish'},
  {text: 'tension rising'},
  {text: 'leprechaun cannot find his gold'},
  {text: 'ladybug sings Lady Gaga song'},
  {text: 'waterfall of Skittles'},
  {text: 'soaking in the sunlight'},
  {text: 'relax and breathe'},
  {text: 'Mary had a little lamb'},
  {text: 'woodchuck chucks wood'},
  {text: 'the gorilla is pleased'},
  {text: 'juicy double hamburger'},
  {text: 'girl on a cookie quest'},
  {text: 'kitten rolling in yarn'},
  {text: 'pizza cat house ball'},
  {text: 'rolling down the river'},
  {text: 'monkey carrot slipper'},
  {text: 'laugh til you cry'},
  {text: 'bodybuilder needs protein'},
  {text: 'really bad haircut'},
  {text: 'this is fine'},
  {text: 'my spoon is too big'},
  {text: 'paper airplane following me'},
  {text: 'the clock is crooked'},
  {text: 'tea time'},
  {text: 'roll on the floor laughing'},
  {text: 'delicious tacos'},
  {text: 'pizza on a stick'},
  {text: 'giraffe with excessively long neck'},
  {text: 'mermaid discovers fork'},
  {text: 'falling asleep in history class'},
  {text: 'mushroom-flavored cookies'},
  {text: 'the caterpiller is smoking a cigar'},
  {text: 'riding a bicycle'},
  {text: 'dog distracted by shiny thing'},
  {text: 'squirrel runs around the lake'},
  {text: 'Batman and Yoda'},
  {text: 'give the horse a sugar cube'},
  {text: 'liar liar pants on fire'},
  {text: 'Pinocchio lies too much'},
  {text: 'inventing the wheel'},
  {text: 'man discovers fire'},
  {text: 'god of the sun'},
  {text: 'Hercules'},
  {text: 'SpongeBob Squarepants out of water'},
  {text: 'trying to be cool even though you farted'},
  {text: 'making a fruit smoothie'},
  {text: 'nun bus'},
  {text: 'cooking in space'},
  {text: 'tooth fairy needs cash'},
  {text: 'walking on sunshine'},
  {text: 'pirahna dinner'},
  {text: 'skip to the barn'},
  {text: 'won the race by a nose'},
  {text: 'Harry Potter forgot his wand'},
  {text: 'an egg that does not want to be cooked'},
  {text: 'pen pineapple apple pen'},
  {text: 'skydiving for the first time'},
  {text: 'it is fun to stay at the YMCA'},
  {text: 'electric eel shocks himself'},
  {text: 'raindance in the desert'},
  {text: 'popcorn for dinner'},
  {text: 'blender and an orange'},
  {text: 'triathlete'},
  {text: 'hiccups during a speech'},
  {text: 'pantless armadillo'},
  {text: 'blueberry girl'},
  {text: 'nightmare cockroaches'},
  {text: 'lion sees his reflection for the first time'},
  {text: 'baby tastes a lemon'},
  {text: 'soccer-football mashup'},
  {text: 'sleepy violinist'},
  {text: 'eggplant-shaped booger'},
  {text: 'feed the birds or they will eat your hair'},
  {text: 'baby broke my iPad'},
  {text: 'jar of rotten tomatoes'},
  {text: 'a moose licked my face and I liked it'},
  {text: 'fabulous hair is fabulous'},
  {text: 'boy stubs toe on a helmet'},
  {text: 'boiling water for tea'},
  {text: 'everything has gluten in it'},
  {text: 'is butter a carb?'},
  {text: 'on Wednesdays we wear pink'},
  {text: 'do NOT touch the moss'},
  {text: 'cuddly pets are the best'},
  {text: 'mock interview'},
  {text: 'nine dogs in a painting'},
  {text: 'too tired to brush my teeth'},
  {text: 'picture day stress'},
  {text: 'paisley crocodile lady'},
  {text: 'I found frog drool on my toothbrush'},
  {text: 'tricycle minus one wheel'},
  {text: 'rabbit wearing a grass dress'},
  {text: 'made my brother wear a tutu'},
  {text: 'kangaroo kicked over my root beer'},
  {text: 'I disemboweled a can of spaghettiOs'},
  {text: 'hamster eating a tiny burrito'},
  {text: 'super juicy bell peppers'},
  {text: 'my sister snuck out of the house'},
  {text: 'spaghetti kiss'},
  {text: 'drowning in a tub of jello'},
  {text: 'attempted murder with a spoon'},
  {text: 'best time to wear a striped sweater'},
  {text: 'eat ALL the brownies'},
  {text: 'I am a banana'},
  {text: 'my spoon is too big'},
  {text: 'the pipes are about to burst'},
  {text: 'family of bats in the attic'},
  {text: 'dust bunnies galore'},
  {text: 'you must vacuum today'},
  {text: 'dropped spam on my laptop'},
  {text: 'his glasses are too small'},
  {text: 'tie dye hoodie'},
  {text: 'open up a can of worms'},
  {text: 'cat got your tongue'},
  {text: 'melting pistachio gelato'},
  {text: 'soggy Frosted Flakes'},
  {text: 'Winnie the Pooh eats honey'},
  {text: 'first date on a boat'},
  {text: 'awkward pig is awkward'},
  {text: 'chihuahua ate too many tacos'},
  {text: 'upside down sloth'},
  {text: 'pina coladas in the rain'},
  {text: 'mom hates my tattoo'},
], phrase => db.model('phrases').create(phrase));

const seedWords = () => db.Promise.map([
  {text: 'bird'},
  {text: 'ice cream cone'},
  {text: 'teacher'},
  {text: 'shopping cart'},
  {text: 'birthday cake'},
  {text: 'thanksgiving'},
  {text: 'monster'},
  {text: 'Chicago'},
  {text: 'helicopter'},
  {text: 'glasses'},
  {text: 'car'},
  {text: 'dalmation'},
  {text: 'chocolate chip cookie'},
  {text: 'Batman'},
  {text: 'Harry Potter'},
  {text: 'baby diaper'},
  {text: 'neck'},
  {text: 'mail'},
  {text: 'chain'},
  {text: 'banana split'},
  {text: 'log'},
  {text: 'doorknob'},
  {text: 'cabinet'},
  {text: 'key'},
  {text: 'beach'},
  {text: 'coconut tree'},
  {text: 'wing'},
  {text: 'brick'},
  {text: 'hospital'},
  {text: 'apple pie'},
  {text: 'airplane'},
  {text: 'fish tank'},
  {text: 'shark tank'},
  {text: 'gingerbread man'},
  {text: 'nest'},
  {text: 'flashlight'},
  {text: 'policeman'},
  {text: 'jungle'},
  {text: 'volcano'},
  {text: 'cockroach'},
  {text: 'elbow'},
  {text: 'spaceship'},
  {text: 'eagle'},
  {text: 'cricket'},
  {text: 'bundle'},
  {text: 'twigs'},
  {text: 'firewood'},
  {text: 'electrical outlet'},
  {text: 'peach'},
  {text: 'hockey'},
  {text: 'baby bib'},
  {text: 'garden'},
  {text: 'unicorn'},
  {text: 'hoof'},
  {text: 'tusk'},
  {text: 'rhinoceros'},
  {text: 'hippopotamus'},
  {text: 'broccoli'},
  {text: 'toaster'},
  {text: 'artist'},
  {text: 'cell phone'},
  {text: 'caterpillar'},
  {text: 'tissue'},
  {text: 'violin'},
  {text: 'river'},
  {text: 'lemon'},
  {text: 'manatee'},
  {text: 'basket'},
  {text: 'braid'},
  {text: 'kite flying'},
  {text: 'boxer'},
  {text: 'paw'},
  {text: 'alarm clock'},
  {text: 'whisk'},
  {text: 'garbage'},
  {text: 'blimp'},
  {text: 'piano'},
  {text: 'vase'},
  {text: 'bouquet'},
  {text: 'swimming pool'},
  {text: 'kangaroo'},
  {text: 'koala'},
  {text: 'puzzle piece'},
  {text: 'golf'},
  {text: 'match'},
  {text: 'seesaw'},
  {text: 'clown'},
  {text: 'tennis'},
  {text: 'chin'},
  {text: 'yo-yo'},
  {text: 'shadow'},
  {text: 'marshmallow'},
], word => db.model('wordbank').create(word));

db.didSync
  .then(() => db.sync({force: true}))
  .then(() => Promise.all([seedUsers(), seedPhrases(), seedWords()]))
  .then(() => {
    console.log('Data seeded successfully');
  })
  .catch(error => console.error(error))
  .finally(() => db.close());
